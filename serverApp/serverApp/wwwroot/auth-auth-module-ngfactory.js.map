{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/services/models.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyD;AAGF;AAEvD,IAAM,UAAU,GAAS;IACrB,kDAAkD;IAClD,EAAC,IAAI,EAAC,OAAO,EAAG,SAAS,EAAC,qEAAc,EAAC;CAC5C;AAED;IAAA;IAMA,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IAAA;IAWA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCpBD,0JAAmC,KACnC;;;;;wBAAmF;MAArD;;wBAAuB;MAArD,i0BAAmF,IACjF,8IAAwB,KACtB,4IAAsB,sFAAS,MAC/B;;;;;;;;;;;;85CAAiG,IAEnG,+IAAwB,KACtB,6IAAsB,qFAAQ,MAC9B;;;;;;;;;;;;85CAAqG,IAEvG,+IAAwB,KACtB,gNAAuE,kDAVrE,mBAAuB,YAA7B,YAAmF,EAA7E,SAAuB,GAGwB,2BAA0B,EAA3E,aAAiG,EAAhD,UAA0B,GAItB,2BAA0B,EAA/E,aAAqG,EAAhD,UAA0B,2BAPnF,8sBAAmF,GAG/E,+tBAAiG,GAIjG,ouBAAqG;;;;;;;;;;;;;;;;ACRzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACV;AACQ;AACP;AACJ;AAEzD;IAQE,wBAAoB,WAAwB,EAClC,KAAqB,EACrB,MAAc;QAFJ,gBAAW,GAAX,WAAW,CAAa;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAHxB,cAAS,GAAG,EAAE,CAAC;IAOf,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,WAAyB;YAChE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC;SAC9D;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvD,CAAC;IACJ,CAAC;IACD,oCAAW,GAAX;IACA,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,CACN;YACZ,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;YACvC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;SACxC,CAAC,CAAC;IACP,CAAC;IAEH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAA;IAME;IACA,CAAC;IACH,iBAAC;AAAD,CAAC;;AAED;IAWE;QADA,aAAQ,GAAY,EAAE,CAAC;IAGvB,CAAC;IACH,cAAC;AAAD,CAAC","file":"auth-auth-module-ngfactory.js","sourcesContent":["import { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nconst authRoutes :Routes=[\r\n    //{path:'register' , component:RegisterComponent},\r\n    {path:'login' , component:LoginComponent},\r\n]\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forChild(authRoutes)],\r\n    exports:[]\r\n})\r\nexport class AuthRoutingModule{\r\n\r\n}\r\n","import { TokenInterceptor } from './../services/tokenInterceptor.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n    declarations:[RegisterComponent,LoginComponent],\r\n    imports:[CommonModule , ReactiveFormsModule , AuthRoutingModule],\r\n    providers:[{\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: TokenInterceptor,\r\n        multi: true\r\n      }]\r\n})\r\nexport class AuthModule{\r\n\r\n}","<div class=\"checkout_details_area\">\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"form form-horizontal\">\n  <div class=\"form-group\">\n    <label for=\"username\">user name</label>\n    <input type=\"text\" id=\"username\" name=\"username\" formControlName=\"username\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">password</label>\n    <input type=\"password\" id=\"password\" name=\"password\" formControlName=\"password\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <input type=\"submit\" name=\"submit\" value=\"login\" class=\"btn amado-btn\">\n  </div>\n</form>\n</div>\n","import { ICurrentUser, IErrorMessage } from './../../services/models';\nimport { AuthService } from './../../services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loginForm: FormGroup\n  returnUrl = \"\";\n  constructor(private AuthService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n\n  ) {\n\n  }\n\n  ngOnInit() {\n    if (this.AuthService.isLogged())\n      this.router.navigate([\"\"]);\n    this.AuthService.loginSubject.subscribe((currentUser: ICurrentUser) => {\n      this.router.navigate([this.returnUrl]);\n    })\n\n    if (this.route.snapshot.queryParams[\"returnUrl\"]) {\n      this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"]\n    }\n    this.loginForm = new FormGroup({\n      username: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required])\n    })\n  }\n  ngOnDestroy() {\n  }\n\n  onSubmit() {\n    this.AuthService.login(\n      <ICurrentUser>{\n        username: this.loginForm.value.username,\n        password: this.loginForm.value.password,\n      });\n  }\n\n}\n","\r\nexport interface ICurrentUser {\r\n    accessToken?: string;\r\n    refreshToken?: string;\r\n    username?: string;//unique\r\n    password?: string;\r\n    mail?: string;\r\n    id?: string;\r\n}\r\nexport interface IErrorMessage{\r\n    code?:number;\r\n    message?:string;\r\n    serverMessage?:string;\r\n}\r\nexport class Department {\r\n  guid: string;\r\n  name: string;\r\n  nameAr?: string;\r\n  parentGuid?: string;\r\n  children: Department[];\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class Product {\r\n  name: string;\r\n  nameAr: string;\r\n  description: string;\r\n  descriptionAr: string;\r\n  likes: number;\r\n  price: number;\r\n  departmentGuid: string;\r\n  guid: string;\r\n  picture?: string;\r\n  pictures?: string[]=[];\r\n  constructor() {\r\n\r\n  }\r\n}\r\n"],"sourceRoot":""}